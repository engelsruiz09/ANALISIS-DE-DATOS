library(ggplot2)
library(dplyr)
circulo <- function(x, R, centroX=0, centroY=0){
r = R * sqrt(runif(x))
theta = runif(x) * 2 * pi
x = centroX + r * cos(theta)
y = centroY + r * sin(theta)
z = data.frame(x = x, y = y)
return(z)
}
set.seed(123)
# We create points around three different points.
datos_1 <- circulo(x = 20,R = 10, centroX = 5, centroY = 30)
datos_2 <- circulo(x = 20,R = 10, centroX = 20, centroY = 10)
datos_3 <- circulo(x = 20,R = 10, centroX = 50, centroY = 50)
datos = data.frame(
rbind(datos_1,datos_2, datos_3),
numero_punto = 1:60
)
rm(datos_1,datos_2,datos_3, circulo)
datos
crear_centroides <- function(n_centroides = 3,datos = datos, columns_skip){
datos_limpios = datos[ , -which(names(datos) %in% columns_skip)]
columnas <- c(letters[24:26],letters[1:23])
x = matrix(ncol = ncol(datos_limpios) +1, nrow = n_centroides)
x[1:n_centroides,1:ncol(datos_limpios)] = replicate(ncol(datos_limpios), runif(n_centroides,min(datos_limpios), max(datos_limpios)))
x[,ncol(datos_limpios) +1] = 1:n_centroides
x = data.frame(x, stringsAsFactors = FALSE)
colnames(x) <- c(columnas[1:ncol(x)-1], "n_centroide")
return(x)
}
centroides = crear_centroides(n_centroides = 3, datos = datos, columns_skip = "numero_punto")
ggplot() +
geom_text(aes(x,y, label = numero_punto), data = datos) +
geom_point(aes(x,y), col = "blue",alpha = 0.2, data = datos) +
geom_point(aes(x,y), data = centroides, size = 10, shape=21) +
geom_text(aes(x,y, label = n_centroide), data = centroides, col = "black") +
geom_segment(aes(x = datos[1,"x"], y =  datos[1,"y"],
xend =   centroides[1,"x"], yend =  centroides[1,"y"]), linetype = "dashed") +
geom_segment(aes(x = datos[1,"x"], y =  datos[1,"y"],
xend =   centroides[2,"x"], yend =  centroides[2,"y"]), linetype = "dashed") +
geom_segment(aes(x = datos[1,"x"], y =  datos[1,"y"],
xend =   centroides[3,"x"], yend =  centroides[3,"y"]), linetype = "dashed") +
theme_minimal() +
labs(title = "Error del punto 1 respecto a los 3 centroides")
datos
centroides
(centroides[1,1] - datos[1,1])^2 + (centroides[1,2] - datos[1,2])^2
(centroides[2,1] - datos[1,1])^2 + (centroides[2,2] - datos[1,2])^2
(centroides[3,1] - datos[1,1])^2 + (centroides[3,2] - datos[1,2])^2
prueba <- c(
(centroides[1,1] - datos[1,1])^2 + (centroides[1,2] - datos[1,2])^2,
(centroides[2,1] - datos[1,1])^2 + (centroides[2,2] - datos[1,2])^2,
(centroides[3,1] - datos[1,1])^2 + (centroides[3,2] - datos[1,2])^2
)
min(prueba)
# agrego dos columnas de error y cluster para asignarlo
datos$error <- NA
datos$cluster <- NA
# determinando la distancia hacia cada centro por cada registro
for (posicion in 1:length(datos$x)){
x<- c(
(centroides[1,1] - datos[posicion,1])^2 + (centroides[1,2] - datos[posicion,2])^2,
(centroides[2,1] - datos[posicion,1])^2 + (centroides[2,2] - datos[posicion,2])^2,
(centroides[3,1] - datos[posicion,1])^2 + (centroides[3,2] - datos[posicion,2])^2
)
#asignando el error menor y el cluster al cual pertenece ese error menor
datos$error[posicion] = min(x)
datos$cluster[posicion] = which(x==min(x))
}
#sum squared error
error = sum(datos$error)
grafica <- function(datos,centroide){
ggplot() +
geom_point(aes(x,y, col = as.factor(cluster), size = 7), data = datos) +
geom_point(aes(x,y), data = centroides, size = 10, shape=21) +
geom_text(aes(x,y, label = n_centroide), data = centroides, col = "black") +
theme_minimal() + theme(legend.position = "bottom") + guides(size = FALSE)
}
grafica(datos,centroides)
centroides <- datos %>%
group_by(cluster) %>%
summarize(
x = mean(x),
y = mean(y)
)  %>%
mutate(n_centroide = cluster) %>%
dplyr::select(-cluster) %>%
ungroup() %>%
as.data.frame(.)
#lista de errores
error = c(0,error)
i = 2
while (round(error[i],2) != round(error[i-1],2)){
#calcula la distancia euclediana (SQE)
for (posicion in 1:length(datos$x)){
x<- c(
(centroides[1,1] - datos[posicion,1])^2 + (centroides[1,2] - datos[posicion,2])^2,
(centroides[2,1] - datos[posicion,1])^2 + (centroides[2,2] - datos[posicion,2])^2,
(centroides[3,1] - datos[posicion,1])^2 + (centroides[3,2] - datos[posicion,2])^2
)
#asignando el error menor y el cluster al cual pertenece ese error menor
datos$error[posicion] = min(x)
datos$cluster[posicion] = which(x==min(x))
}
error = c(error,sum(datos$error))
#Recalcular los centros
centroides <- datos %>%
group_by(cluster) %>%
summarize(
x = mean(x),
y = mean(y)
)  %>%
mutate(n_centroide = cluster) %>%
dplyr::select(-cluster) %>%
ungroup() %>%
as.data.frame(.)
i = i + 1
}
error
wine <- read.csv("wine2.data")
wine
head(wine)
table(wine$Cultivar)
winedataset <- wine[,which(names(wine!="Cultivar"))]
winedataset <- wine[,which(names(wine)!="Cultivar")]
winetrain <- kmeans(winedataset,centers=5)
winedataset <- wine[,which(names(wine)!="Cultivar")]
winetrain <- kmeans(winedataset,centers=5)
plot(winetrain,data=winedataset)
winetrain
winetrain
plot(winetrain,data=winedataset)
plot(winetrain,data=winedataset)
plot(winetrain,data=winedataset)
library(useful)
install.packages("useful")
library(useful)
plot(winetrain,data=winedataset)
df <- data.frame(matrix(ncol=2,nrow = 0))
col(df) <- c("K","error")
df <- data.frame(matrix(ncol=2,nrow=0))
col(df) <- C("K","error")
df <- data.frame(matrix(ncol=2,nrow=0))
colnames(df) <- c("K","error")
for (i in 2:25) {
winetrain <- kmeans(x=winedataset, centers = i)
df[i-1,]<-c(i,winetrain$withinss) #el error completo de todos los clusters
}
df
ggplot(data<-df,x=K,y=error)
geom_line(linetype="dashed")+
geom_point()
library(useful)
library(ggplot2)
df <- data.frame(matrix(ncol=2,nrow=0))
colnames(df) <- c("K","error")
for (i in 2:25) {
winetrain <- kmeans(x=winedataset, centers = i)
df[i-1,]<-c(i,winetrain$withinss) #el error completo de todos los clusters
}
df
ggplot(data<-df,x=K,y=error)
geom_line(linetype="dashed")+
geom_point()
df <- data.frame(matrix(ncol=2,nrow=0))
colnames(df) <- c("K","error")
for (i in 2:25) {
winetrain <- kmeans(x=winedataset, centers = i)
df[i-1,]<-c(i,winetrain$withinss) #el error completo de todos los clusters
}
df
ggplot(data<-df,aes(x=K,y=error))+
geom_line(linetype="dashed")+
geom_point()
df <- data.frame(matrix(ncol=2,nrow=0))
colnames(df) <- c("K","error")
for (i in 2:25) {
winetrain <- kmeans(x=winedataset, centers = i)
df[i-1,]<-c(i,winetrain$withinss) #el error completo de todos los clusters
}
df
ggplot(data<-df,aes(x=K,y=error))+
geom_line(linetype="dashed")+
geom_point()
winetrain <- kmeans(x=winedataset,centers=5)
plot(winetrain,data=winedataset)
df <- data.frame(matrix(ncol=2,nrow=0))
colnames(df) <- c("K","error")
for (i in 2:25) {
winetrain <- kmeans(x=winedataset, centers = i)
df[i-1,]<-c(i,winetrain$withinss) #el error completo de todos los clusters
}
df
ggplot(data<-df,aes(x=K,y=error))+
geom_line(linetype="dashed")+
geom_point()
library(useful)
library(ggplot2)
df <- data.frame(matrix(ncol=2,nrow=0))
colnames(df) <- c("K","error")
for (i in 2:25) {
winetrain <- kmeans(x=winedataset, centers = i)
df[i-1,]<-c(i,winetrain$withinss) #el error completo de todos los clusters
}
df
ggplot(data<-df,aes(x=K,y=error))+
geom_line(linetype="dashed")+
geom_point()
winedataset <- wine[,which(names(wine)!="Cultivar")]
winetrain <- kmeans(winedataset,centers=5)
